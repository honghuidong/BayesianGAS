% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesian_gas.R
\name{GASModelIndex}
\alias{GASModelIndex}
\alias{GASModel}
\alias{Rcpp_GASModel-class}
\alias{Rcpp_GASModel}
\alias{BetaGenTEGARCH}
\alias{Rcpp_BetaGenTEGARCH-class}
\alias{Rcpp_BetaGenTEGARCH}
\alias{BetaTEGARCH}
\alias{Rcpp_BetaTEGARCH-class}
\alias{Rcpp_BetaTEGARCH}
\alias{DPMP}
\alias{Rcpp_DPMP-class}
\alias{Rcpp_DPMP}
\title{Generalized Autoregressive Score (GAS) models}
\description{
The GAS framework provides a lot of structure, which all models within the
framework share. The implementations of the models in this package reflect
this structure through class ineheritance. The parent \code{GASmodel} class
implements a significant share of the functionality and also functions as an
interface. The specific GAS model classes implement the details of the model
specific probability density and other desired specialized functionality.
}
\section{Usage}{

\preformatted{
a <- new(GASModel, modelStr)
a <- new(GASModel, modelStr, initParams)
a <- new(GASModel, modelStr, initParams, priorStack)

a <- new(BetaTEGARCH, initParams)
a <- new(BetaTEGARCH, initParams, priorStack)

a$SetParams(params)

a$LogL(y, f1)
a$LogLWPar(params, y, f1)
a$LogPosteriorWPar(params, y, f1)
a$GradLogLWPar(params, y, f1)

a$Filter(y, f1)
}
}

\section{Details}{


\code{new(GASModel, modelStr)},
\code{new(GASModel, modelStr, initParams)},
\code{new(GASModel, modelStr, initParams, priorStack)}.
Create a new GASModel instance of type parent class \code{GASModel}. The
instance has access to the functionality associated with the model type
specified in modelStr. The string modelStr has to be one of the models
included in the supported model list (see [BayesianGAS]). Optionally
supply a parameter vector \code{initParams} and a prior specification
\code{priorStack} @seealso [PriorStack]

\code{new(Class, initParams)},
\code{new(Class, initParams, priorStack)}
Create a new GASModel instance of type \code{Class} where \code{Class} is
one of the models included in the supported model list. Optionally
supply a parameter vector \code{initParams} and a prior specification
\code{priorStack}

\code{$SetParams(params)}
Sets the model specific Parameters with the numeric vector \code{params}.

\code{$LogL(y, f1)}
Computes the models log likelihood for data \code{y} and the initial state
for the time-varying parameters set to \code{f1}.

\code{$LogLWPar(y, f1, params)}
Same as \code{$LogL}, but is combined with a call to \code{SetParams} to
update the models parameters with \code{params}.

\code{$LogPosteriorWPar(y, f1, params)}
Computes the models log posterior, which is defined as the sum of log
likelihood plus log prior for GAS models. Like for \code{$LogLWPar} the
model parameters are updated with \code{params}.

\code{$GradLogLWPar(params, y, f1)}
Computes the gradient of the models log likelhood, given the data \code{y},
the initial time-varying paramater state \code{f1}, and model parameters
\code{params}.

\code{$Filter(y, f1)}
Computes the set of time-varying parameters for each observation, given the
data \code{y}, the initial time-varying paramater state \code{f1}. Returns
array like of dimension T by d, where T is the number of observations and d
is the number time-varying parameters of the model.
}

